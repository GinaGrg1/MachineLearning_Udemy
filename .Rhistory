install.packages("devutils")
revenue <- c(30,20, 23, 17)
product <- factor(c(“bread”, “cake”, “bread”, “cake”))
shop <- gl(2,2, labels=c(“shop_1”, “shop_2”))
revenue <- c(30,20, 23, 17)
product <- factor(c(“bread”, “cake”, “bread”, “cake”))
product <- factor(c('bread', 'cake', 'bread', 'cake'))
product
shop <- gl(2,2, labels=c('shop_1', 'shop_2'))
shop
?gl
shop_revenue <- ave(revenue, shop, FUN=sum)
shop_revenue
getwd()
1/3
650+100
750/2
getcwd()
getwd()
# Importing the dataset
dataset = read.csv('Lesson_1/Salary_Data.csv')
View(dataset)
install.packages('caTools')
library(caTools)
set.seed(123)
split <- sample.split(dataset$Salary, SplitRatio = 2/3)
split
training_set <- subset(dataset, split == TRUE)
test_set <- subset(dataset, split == FALSE)
View(training_set)
View(test_set)
regressor <- lm(Salary ~ YearsExperience, data = training_set)
summary(regressor)
# Predicting the Test set results.
y_pred <- predict(regressor, newdata = test_set)
y_pred
library(ggplot2)
install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'green') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
summary(glm.fit.1)
knitr::opts_chunk$set(echo = TRUE)
summary(glm.fit.1)
set.seed(5)
glm.fit.1 <- glm(y ~ x)
set.seed(1)
x <- rnorm(100)
y <- x - 2 * x^2 + rnorm(100)
set.seed(1)
library(boot)
dataset <- data.frame(x, y)
glm.fit.1 <- glm(y ~ x)
cv.glm(dataset, glm.fit.1)$delta[1]
glm.fit.2 <- glm(y ~ poly(x, 2))
cv.glm(dataset, glm.fit.2)$delta[1]
# This is a polynomial with degree 3.
glm.fit.3 <- glm(y ~ poly(x, 3))
cv.glm(dataset, glm.fit.3)$delta[1]
glm.fit.4 <- glm(y ~ poly(x, 4))
cv.glm(dataset, glm.fit.4)$delta[1]
summary(glm.fit.1)
summary(glm.fit.4)
Auto$mpg01 <- ifelse(Auto$mpg > median(Auto$mpg), 1, 0)
library(ISLR)
Auto$mpg01 <- ifelse(Auto$mpg > median(Auto$mpg), 1, 0)
Auto$mpg01 <- ifelse(Auto$mpg > median(Auto$mpg), 1, 0)
head(Auto)
cor(Auto[, 1:8])
cor(Auto[, -('name')])
cor(Auto[, -'name'])
cor(Auto[, select = -c("name")])
cor(Auto[, select = -c(name)])
cor(Auto[, select = -name])
Auto[, select = -name]
Auto[, !(names(Auto) %in% 'name')]
cor(Auto[, !(names(Auto) %in% 'name')])
c(40, 40)
